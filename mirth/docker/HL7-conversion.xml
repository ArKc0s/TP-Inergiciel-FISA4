<channel version="4.5.0">
  <id>abf20459-dfd5-4611-84fa-3f84045f203a</id>
  <nextMetaDataId>2</nextMetaDataId>
  <name>HL7 Conversion 2 steps</name>
  <description></description>
  <revision>90</revision>
  <sourceConnector version="4.5.0">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="4.5.0">
      <pluginProperties/>
      <pollConnectorProperties version="4.5.0">
        <pollingType>INTERVAL</pollingType>
        <pollOnStart>false</pollOnStart>
        <pollingFrequency>5000</pollingFrequency>
        <pollingHour>0</pollingHour>
        <pollingMinute>0</pollingMinute>
        <cronJobs/>
        <pollConnectorPropertiesAdvanced>
          <weekly>true</weekly>
          <inactiveDays>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
          </inactiveDays>
          <dayOfMonth>1</dayOfMonth>
          <allDay>true</allDay>
          <startingHour>8</startingHour>
          <startingMinute>0</startingMinute>
          <endingHour>17</endingHour>
          <endingMinute>0</endingMinute>
        </pollConnectorPropertiesAdvanced>
      </pollConnectorProperties>
      <sourceConnectorProperties version="4.5.0">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
      <scheme>FILE</scheme>
      <host>/opt/hl7</host>
      <fileFilter>*</fileFilter>
      <regex>false</regex>
      <directoryRecursion>false</directoryRecursion>
      <ignoreDot>true</ignoreDot>
      <anonymous>true</anonymous>
      <username>anonymous</username>
      <password>anonymous</password>
      <timeout>10000</timeout>
      <secure>true</secure>
      <passive>true</passive>
      <validateConnection>true</validateConnection>
      <afterProcessingAction>NONE</afterProcessingAction>
      <moveToDirectory></moveToDirectory>
      <moveToFileName></moveToFileName>
      <errorReadingAction>NONE</errorReadingAction>
      <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
      <errorMoveToDirectory></errorMoveToDirectory>
      <errorMoveToFileName></errorMoveToFileName>
      <checkFileAge>true</checkFileAge>
      <fileAge>1000</fileAge>
      <fileSizeMinimum>0</fileSizeMinimum>
      <fileSizeMaximum></fileSizeMaximum>
      <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
      <sortBy>date</sortBy>
      <binary>false</binary>
      <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
    </properties>
    <transformer version="4.5.0">
      <elements/>
      <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlQSUh8Q09OVkVSR0VOQ0V8U0lIfERQSXwyMDIyMDExNDE3MDMwMHwzNTB8QURUXkEwM15BRFRfQTAzfDIwMjIwMTE0MTcwMzE1OTR8UHwyLjVeRlJBXjIuNXx8fHx8RlJBfDg4NTkvMXxGUg1FVk58fDIwMjIwMTE0MTcwMzAwfHx8fDIwMjIwMTE0MTcwMjAwDVBJRHwxfHw4MTA3ODQ2NDFeXl5DT05WRVJHRU5DRV5QSV5efHxub204MTA3ODQ2NDFeQU5OSUNLXl5eTW1lXl5Efm5vbTgxMDc4NDY0MV5BTk5JQ0teXl5NbWVeXkx8fDE5NDIxMDEyfEZ8fHwxMjUgUlVFIERFUyBGUkVSRVMgTUlDSEVMSU5eICBedmlsbGU4MTA3ODQ2NDFeXmNwODEwNzg0NjQxXjEwMF5Ifl5edmlsbGU4MTA3ODQ2NDFeXmNwODEwNzg0NjQxXjEwMF5CREx+XiAgXl5eXl5DfHx0ZWw4MTA3ODQ2NDFeUFJOXlBIXmFkcm1haWw4MTA3ODQ2NDFeXl5eXl5eXnRlbDgxMDc4NDY0MX50ZWw4MTA3ODQ2NDFeUFJOXkNQXmFkcm1haWw4MTA3ODQ2NDFeXl5eXl5eXnRlbDgxMDc4NDY0MX50ZWw4MTA3ODQ2NDFeXl5hZHJtYWlsODEwNzg0NjQxXl5eXl5eXl50ZWw4MTA3ODQ2NDF8Xl5eXl5eXl5eXl58fE18fDExNTAwMTUzNjZeXl5DT05WRVJHRU5DRXx8fF5eXkNPTlZFUkdFTkNFfHx8fHx8fHx8TnxQUk9WDVBEMXx8VQ1ST0x8MXxVUHxPRFJQfF5tZWRlY2luODEwNzg0NjQxXkRFTFBISU5FXl5Ecl5eXl5FSV5MXl5efDIwMjAxMTIwfHx8fHx8XiBeXl5eDVBWMXwxfEl8NzEzNl5IMTIyMl5IMTIyMlAxfHx8fDAzMjleXl5eXl5eXl5eXl5FSXx8fHx8fHwxMXx8fHx8MTE1MDAxNTM2Nl5eXkNPTlZFUkdFTkNFfHx8Tnx8fHx8fHx8fHx8fHx8fHx8fHx8fHwyMDIyMDExNDEyMjAwMHwyMDIyMDExNDE3MDIwMHx8fHx8fEENUFYyfHx8fHx8fE98fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8NQ1aQkV8QTAzRTE1MzQ2MjA0XkNPTlZFUkdFTkNFfDIwMjIwMTE0MTcwMjAwfHxJTlNFUlR8TnxBMDN8Xl5eXl5eVUZeXl43MTY3fHxNSA1aRk18ODB8OHwwfDANSU4xfDF8QU1PfDkxMTgxNTA2NnxjcGFtTXV0ODEwNzg0NjQxfHx8fHx8fHwyMDIwMDQzMHwyMDIyMDQzMHx8fG5vbTgxMDc4NDY0MV5BTk5JQ0teXl5eXlV8MDF8fF4gXl5efHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8c3M4MTA3ODQ2NDENSU4xfDJ8QU1DfDMzOTQwN3xjcGFtTXV0ODEwNzg0NjQxfHx8fHx8fHwyMDIyMDEwMXwyMDIyMTIzMXx8fG5vbTgxMDc4NDY0MV5BTk5JQ0teXl5eXlV8fHxeIF5eXnx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHNzODEwNzg0NjQxDUlOMXwzfFBBVHx8bm9tODEwNzg0NjQxfHx8fHx8fHx8fHx8Xl5eXl5eVXx8fF4gXl5eDVpGVnxeDQ==</inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>HL7V2</inboundDataType>
      <outboundDataType>HL7V2</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="4.5.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="4.5.0">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>false</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="4.5.0">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="4.5.0">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="4.5.0">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="4.5.0">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="4.5.0">
        <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="4.5.0">
          <handleRepetitions>true</handleRepetitions>
          <handleSubcomponents>true</handleSubcomponents>
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <stripNamespaces>false</stripNamespaces>
          <segmentDelimiter>\r</segmentDelimiter>
          <convertLineBreaks>true</convertLineBreaks>
        </serializationProperties>
        <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="4.5.0">
          <useStrictParser>false</useStrictParser>
          <useStrictValidation>false</useStrictValidation>
          <segmentDelimiter>\r</segmentDelimiter>
        </deserializationProperties>
        <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="4.5.0">
          <splitType>MSH_Segment</splitType>
          <batchScript></batchScript>
        </batchProperties>
        <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="4.5.0">
          <segmentDelimiter>\r</segmentDelimiter>
          <successfulACKCode>AA</successfulACKCode>
          <successfulACKMessage></successfulACKMessage>
          <errorACKCode>AE</errorACKCode>
          <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
          <rejectedACKCode>AR</rejectedACKCode>
          <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
          <msh15ACKAccept>false</msh15ACKAccept>
          <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
        </responseGenerationProperties>
        <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="4.5.0">
          <successfulACKCode>AA,CA</successfulACKCode>
          <errorACKCode>AE,CE</errorACKCode>
          <rejectedACKCode>AR,CR</rejectedACKCode>
          <validateMessageControlId>true</validateMessageControlId>
          <originalMessageControlId>Destination_Encoded</originalMessageControlId>
          <originalIdMapVariable></originalIdMapVariable>
        </responseValidationProperties>
      </outboundProperties>
    </transformer>
    <filter version="4.5.0">
      <elements/>
    </filter>
    <transportName>File Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="4.5.0">
      <metaDataId>1</metaDataId>
      <name>Destination 1</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.5.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.5.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>http://api:8080/json/send</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>post</method>
        <headers class="linked-hash-map"/>
        <parameters class="linked-hash-map"/>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content>${message.encodedData}</content>
        <contentType>text/plain</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.5.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.5.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var json= {};
var patient = {};

patient.PatientID = msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString();

//N&apos;entre pas dans la boucle if
var nbFieldPID5 = msg[&apos;PID&apos;][&apos;PID.5&apos;].length();

for (var i = 0; i &lt; nbFieldPID5; i++)
{
    if( msg[&apos;PID&apos;][&apos;PID.5&apos;][i][&apos;PID.5.7&apos;].toString() == &quot;D&quot; )
    {
        patient.PatientBirthName = msg[&apos;PID&apos;][&apos;PID.5&apos;][i][&apos;PID.5.1&apos;].toString();
    }
    else if (msg[&apos;PID&apos;][&apos;PID.5&apos;][i][&apos;PID.5.7&apos;].toString() == &quot;L&quot;)
    {
        patient.PatientLegalName = msg[&apos;PID&apos;][&apos;PID.5&apos;][i][&apos;PID.5.1&apos;].toString();
    }
}

patient.PatientFirstName = msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString();
patient.PatientPrefix = msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.5&apos;].toString();

var dateString = msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;];

// Extraire les parties de la date
var year = dateString.substring(0, 4);
var month = dateString.substring(4, 6);
var day = dateString.substring(6, 8);

// Créer un objet Date avec les parties extraites
var date = new Date(year, month - 1, day);

// Formater la date en &quot;DD-MM-YYYY&quot;
var formattedDate = (&apos;0&apos; + date.getDate()).slice(-2) + &apos;-&apos; + (&apos;0&apos; + (date.getMonth() + 1)).slice(-2) + &apos;-&apos; + date.getFullYear();

patient.PatientBirthDate = formattedDate;

json.Patient = patient

var nbFieldPID11=msg[&apos;PID&apos;][&apos;PID.11&apos;].length();

// Boucle à travers toutes les adresses
// Corriger pour avoir toutes les adresses et les numéroter dans le json
Addresses = [];
//for (var i = 0; i &lt; nbFieldPID11; i++) {
for (var i = 0; i &lt; nbFieldPID11; i++) {
    var addressIndex = i + 1;
    var Address = {};

    Address.addressIndex = addressIndex;
    Address.StreetAddress = msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString();
    Address.OtherDesignation = msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString();
    Address.City = msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString();
    Address.StateOrProvince = msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString();
    Address.ZipOrPostalCode = msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString();
    Address.Country = msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.6&apos;].toString();
    Address.AddressType = msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString();

    Addresses.push(Address);
}
json.Addresses = Addresses

var Movements = {};

Movements.Service = msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString();
Movements.Room = msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.2&apos;].toString();
Movements.Bed = msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.3&apos;].toString();

json.Movements = Movements;

var stay = {};

stay.NumUniqueSejour = msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString();
var admitdate = msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString();

// Extraire les parties de la date
var year = admitdate.substring(0, 4);
var month = admitdate.substring(4, 6);
var day = admitdate.substring(6, 8);
var hours = admitdate.substring(8, 10);
var minutes = admitdate.substring(10, 12);
var seconds = admitdate.substring(12, 14);

// Créer un objet Date avec les parties extraites
var admitdateformated = new Date(year, month - 1, day, hours, minutes, seconds);


stay.AdmitDate = admitdateformated;


var dischargeDate = msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString();
// Extraire les parties de la date
var year = dischargeDate.substring(0, 4);
var month = dischargeDate.substring(4, 6);
var day = dischargeDate.substring(6, 8);
var hours = dischargeDate.substring(8, 10);
var minutes = dischargeDate.substring(10, 12);
var seconds = dischargeDate.substring(12, 14);

// Créer un objet Date avec les parties extraites
var dischargeDateformated = new Date(year, month - 1, day, hours, minutes, seconds);

stay.DischargeDate = dischargeDateformated;

json.Stay = stay;


msg = json</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlQSUh8Q09OVkVSR0VOQ0V8U0lIfERQSXwyMDIyMDExNDE3MDMwMHwzNTB8QURUXkEwM15BRFRfQTAzfDIwMjIwMTE0MTcwMzE1OTR8UHwyLjVeRlJBXjIuNXx8fHx8RlJBfDg4NTkvMXxGUg1FVk58fDIwMjIwMTE0MTcwMzAwfHx8fDIwMjIwMTE0MTcwMjAwDVBJRHwxfHw4MTA3ODQ2NDFeXl5DT05WRVJHRU5DRV5QSV5efHxub204MTA3ODQ2NDFeQU5OSUNLXl5eTW1lXl5Efm5vbTgxMDc4NDY0MV5BTk5JQ0teXl5NbWVeXkx8fDE5NDIxMDEyfEZ8fHwxMjUgUlVFIERFUyBGUkVSRVMgTUlDSEVMSU5eICBedmlsbGU4MTA3ODQ2NDFeXmNwODEwNzg0NjQxXjEwMF5Ifl5edmlsbGU4MTA3ODQ2NDFeXmNwODEwNzg0NjQxXjEwMF5CREx+XiAgXl5eXl5DfHx0ZWw4MTA3ODQ2NDFeUFJOXlBIXmFkcm1haWw4MTA3ODQ2NDFeXl5eXl5eXnRlbDgxMDc4NDY0MX50ZWw4MTA3ODQ2NDFeUFJOXkNQXmFkcm1haWw4MTA3ODQ2NDFeXl5eXl5eXnRlbDgxMDc4NDY0MX50ZWw4MTA3ODQ2NDFeXl5hZHJtYWlsODEwNzg0NjQxXl5eXl5eXl50ZWw4MTA3ODQ2NDF8Xl5eXl5eXl5eXl58fE18fDExNTAwMTUzNjZeXl5DT05WRVJHRU5DRXx8fF5eXkNPTlZFUkdFTkNFfHx8fHx8fHx8TnxQUk9WDVBEMXx8VQ1ST0x8MXxVUHxPRFJQfF5tZWRlY2luODEwNzg0NjQxXkRFTFBISU5FXl5Ecl5eXl5FSV5MXl5efDIwMjAxMTIwfHx8fHx8XiBeXl5eDVBWMXwxfEl8NzEzNl5IMTIyMl5IMTIyMlAxfHx8fDAzMjleXl5eXl5eXl5eXl5FSXx8fHx8fHwxMXx8fHx8MTE1MDAxNTM2Nl5eXkNPTlZFUkdFTkNFfHx8Tnx8fHx8fHx8fHx8fHx8fHx8fHx8fHwyMDIyMDExNDEyMjAwMHwyMDIyMDExNDE3MDIwMHx8fHx8fEENUFYyfHx8fHx8fE98fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8NQ1aQkV8QTAzRTE1MzQ2MjA0XkNPTlZFUkdFTkNFfDIwMjIwMTE0MTcwMjAwfHxJTlNFUlR8TnxBMDN8Xl5eXl5eVUZeXl43MTY3fHxNSA1aRk18ODB8OHwwfDANSU4xfDF8QU1PfDkxMTgxNTA2NnxjcGFtTXV0ODEwNzg0NjQxfHx8fHx8fHwyMDIwMDQzMHwyMDIyMDQzMHx8fG5vbTgxMDc4NDY0MV5BTk5JQ0teXl5eXlV8MDF8fF4gXl5efHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8c3M4MTA3ODQ2NDENSU4xfDJ8QU1DfDMzOTQwN3xjcGFtTXV0ODEwNzg0NjQxfHx8fHx8fHwyMDIyMDEwMXwyMDIyMTIzMXx8fG5vbTgxMDc4NDY0MV5BTk5JQ0teXl5eXlV8fHxeIF5eXnx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHNzODEwNzg0NjQxDUlOMXwzfFBBVHx8bm9tODEwNzg0NjQxfHx8fHx8fHx8fHx8Xl5eXl5eVXx8fF4gXl5eDVpGVnxeDQ==</inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>HL7V2</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="4.5.0">
          <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="4.5.0">
            <handleRepetitions>true</handleRepetitions>
            <handleSubcomponents>true</handleSubcomponents>
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <stripNamespaces>false</stripNamespaces>
            <segmentDelimiter>\r</segmentDelimiter>
            <convertLineBreaks>true</convertLineBreaks>
          </serializationProperties>
          <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="4.5.0">
            <useStrictParser>false</useStrictParser>
            <useStrictValidation>false</useStrictValidation>
            <segmentDelimiter>\r</segmentDelimiter>
          </deserializationProperties>
          <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="4.5.0">
            <splitType>MSH_Segment</splitType>
            <batchScript></batchScript>
          </batchProperties>
          <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="4.5.0">
            <segmentDelimiter>\r</segmentDelimiter>
            <successfulACKCode>AA</successfulACKCode>
            <successfulACKMessage></successfulACKMessage>
            <errorACKCode>AE</errorACKCode>
            <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
            <rejectedACKCode>AR</rejectedACKCode>
            <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
            <msh15ACKAccept>false</msh15ACKAccept>
            <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
          </responseGenerationProperties>
          <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="4.5.0">
            <successfulACKCode>AA,CA</successfulACKCode>
            <errorACKCode>AE,CE</errorACKCode>
            <rejectedACKCode>AR,CR</rejectedACKCode>
            <validateMessageControlId>true</validateMessageControlId>
            <originalMessageControlId>Destination_Encoded</originalMessageControlId>
            <originalIdMapVariable></originalIdMapVariable>
          </responseValidationProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.5.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.5.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.5.0">
        <elements/>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.5.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.5.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.5.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.5.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.5.0">
        <elements/>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="4.5.0">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>PRODUCTION</messageStorageMode>
    <encryptData>false</encryptData>
    <encryptAttachments>false</encryptAttachments>
    <encryptCustomMetaData>false</encryptCustomMetaData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>true</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="4.5.0">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>true</enabled>
      <lastModified>
        <time>1710425331488</time>
        <timezone>Europe/Paris</timezone>
      </lastModified>
      <pruningSettings>
        <archiveEnabled>true</archiveEnabled>
        <pruneErroredMessages>false</pruneErroredMessages>
      </pruningSettings>
      <userId>1</userId>
    </metadata>
  </exportData>
</channel>